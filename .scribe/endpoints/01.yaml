name: Organizations
description: |-

  Organizations represent a company, or a group of people.

  Organizations are created by users. Any user, regardless of their role, can
  create an organization.

  Organizations are identified by a unique code. This code is used to let
  other users join the organization.

  Organizations also have a slug. This slug is used to identify the organization
  in the URL.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/organizations
    metadata:
      groupName: Organizations
      groupDescription: |-

        Organizations represent a company, or a group of people.

        Organizations are created by users. Any user, regardless of their role, can
        create an organization.

        Organizations are identified by a unique code. This code is used to let
        other users join the organization.

        Organizations also have a slug. This slug is used to identify the organization
        in the URL.
      subgroup: ''
      subgroupDescription: ''
      title: 'List all organizations.'
      description: |-
        This API call returns a paginated collection of organizations that contains
        15 items per page.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {"data": [{
           "id": 1,
           "object": "organization",
           "name": "Acme, Inc.",
           "slug": "acme-inc",
           "code": "ACME1234567890",
           "created_at": 1514764800,
           "updated_at": 1514764800,
          }, {
           "id": 2,
           "object": "organization",
           "name": "Acme, Inc.",
           "slug": "acme-inc",
           "code": "ACME1234567890",
           "created_at": 1514764800,
           "updated_at": 1514764800,
          }],
          "links": {
            "first": "http://wassup.test/api/organizations?page=1",
            "last": "http://wassup.test/api/organizations?page=1",
            "prev": null,
            "next": null
           },
           "meta": {
             "current_page": 1,
             "from": 1,
             "last_page": 1,
             "links": [
               {
                 "url": null,
                 "label": "&laquo; Previous",
                 "active": false
               },
               {
                 "url": "http://wassup.test/api/organizations?page=1",
                 "label": "1",
                 "active": true
               },
               {
                 "url": null,
                 "label": "Next &raquo;",
                 "active": false
               }
             ],
             "path": "http://wassup.test/api/organizations",
             "per_page": 15,
             "to": 1,
             "total": 1
           }
        headers: []
        description: ''
        custom: []
    responseFields:
      id:
        name: id
        description: 'Unique identifier for the object.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      object:
        name: object
        description: 'The object type. Always "organization".'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the organization.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the organization.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code:
        name: code
        description: 'The code of the organization.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      created_at:
        name: created_at
        description: 'The date the object was created. Represented as a Unix timestamp.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      updated_at:
        name: updated_at
        description: 'The date the object was last updated. Represented as a Unix timestamp.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/organizations/{organization}'
    metadata:
      groupName: Organizations
      groupDescription: |-

        Organizations represent a company, or a group of people.

        Organizations are created by users. Any user, regardless of their role, can
        create an organization.

        Organizations are identified by a unique code. This code is used to let
        other users join the organization.

        Organizations also have a slug. This slug is used to identify the organization
        in the URL.
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve an organization.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      organization:
        name: organization
        description: 'The id of the organization.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      organization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "object": "organization",
            "name": "Acme, Inc.",
            "slug": "acme-inc",
            "code": "ACME1234567890",
            "created_at": 1514764800,
            "updated_at": 1514764800
          }
        headers: []
        description: ''
        custom: []
    responseFields:
      id:
        name: id
        description: 'Unique identifier for the object.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      object:
        name: object
        description: 'The object type. Always "organization".'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the organization.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the organization.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code:
        name: code
        description: 'The code of the organization.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      created_at:
        name: created_at
        description: 'The date the object was created. Represented as a Unix timestamp.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      updated_at:
        name: updated_at
        description: 'The date the object was last updated. Represented as a Unix timestamp.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/organizations
    metadata:
      groupName: Organizations
      groupDescription: |-

        Organizations represent a company, or a group of people.

        Organizations are created by users. Any user, regardless of their role, can
        create an organization.

        Organizations are identified by a unique code. This code is used to let
        other users join the organization.

        Organizations also have a slug. This slug is used to identify the organization
        in the URL.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create an organization.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the organization. Max 255 characters.'
        required: true
        example: 'Acme, Inc.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Acme, Inc.'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "id": 1,
           "object": "organization",
           "name": "Acme, Inc.",
           "slug": "acme-inc",
           "code": "ACME1234567890",
           "created_at": 1514764800,
           "updated_at": 1514764800,
          }
        headers: []
        description: ''
        custom: []
    responseFields:
      id:
        name: id
        description: 'Unique identifier for the object.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      object:
        name: object
        description: 'The object type. Always "organization".'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the organization.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the organization.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code:
        name: code
        description: 'The code of the organization.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      created_at:
        name: created_at
        description: 'The date the object was created. Represented as a Unix timestamp.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      updated_at:
        name: updated_at
        description: 'The date the object was last updated. Represented as a Unix timestamp.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/organizations/{organization}'
    metadata:
      groupName: Organizations
      groupDescription: |-

        Organizations represent a company, or a group of people.

        Organizations are created by users. Any user, regardless of their role, can
        create an organization.

        Organizations are identified by a unique code. This code is used to let
        other users join the organization.

        Organizations also have a slug. This slug is used to identify the organization
        in the URL.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an organization.'
      description: |-
        Only administrators can update an organization.
        Changing the name of the organization will change the slug and therfore,
        all the URLs that were previously created for this organization will be
        invalidated.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      organization:
        name: organization
        description: 'The id of the organization.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      organization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the organization. Max 255 characters.'
        required: true
        example: 'Acme, Inc.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Acme, Inc.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "object": "organization",
           "name": "Acme, Inc.",
           "slug": "acme-inc",
           "code": "ACME1234567890",
           "created_at": 1514764800,
           "updated_at": 1514764800,
          }
        headers: []
        description: ''
        custom: []
    responseFields:
      id:
        name: id
        description: 'Unique identifier for the object.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      object:
        name: object
        description: 'The object type. Always "organization".'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the organization.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the organization.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code:
        name: code
        description: 'The code of the organization.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      created_at:
        name: created_at
        description: 'The date the object was created. Represented as a Unix timestamp.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      updated_at:
        name: updated_at
        description: 'The date the object was last updated. Represented as a Unix timestamp.'
        required: false
        example: null
        type: ''
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/organizations/{organization}'
    metadata:
      groupName: Organizations
      groupDescription: |-

        Organizations represent a company, or a group of people.

        Organizations are created by users. Any user, regardless of their role, can
        create an organization.

        Organizations are identified by a unique code. This code is used to let
        other users join the organization.

        Organizations also have a slug. This slug is used to identify the organization
        in the URL.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an organization.'
      description: 'Only administrators can delete an organization.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      organization:
        name: organization
        description: 'The id of the organization.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      organization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
